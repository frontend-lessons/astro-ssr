---
import Layout from '../Layout.astro';
import {Input, Password} from '../../components/auth/inputs'
interface Props {
	title: string;
    action: string;
    useFetch?: boolean;    
}

const { title, action, useFetch = false } = Astro.props;
---
<Layout title={ title }>  
    <div slot="main">
        <main class="bg-white max-w-lg mx-auto p-8 md:p-12 my-10 rounded-lg shadow-2xl">
            <section>
                <h3 class="font-bold text-2xl">Welcome to { Astro.site?.hostname }</h3>
                <p class="text-gray-600 pt-2">{ title }</p>
            </section>

            <section class="mt-10">
                <form class="flex flex-col" method="POST" action=`/actions/${action}` enctype="application/x-www-form-urlencoded">
                    <slot name="inputs">
                        <Input label="Email" name="email"/>
                        <Password label="Password" name="password"/>
                    </slot>
                    <slot name="after-inputs" />
                    <slot name="buttons" />
                </form> { useFetch &&
                <script define:vars={{ action }}>    
                    window.addEventListener('DOMContentLoaded', function(){    
                        const form = document.querySelector('form');
                        form.addEventListener('submit', async function(evt){
                            evt.preventDefault();
                            try{          
                                const formData = new FormData(form);  
                                const response = await fetch(form.action, {
                                    body: JSON.stringify(Object.fromEntries(formData)),
                                    method: 'POST', 
                                    headers: {
                                        'Accept':'application/json',
                                        'Content-Type': 'application/json'
                                    }
                                });
                                
                                if (response.status >= 300 && response.status <400){
                                    const data = await response.json();
                                    window.location.replace(data.redirect);
                                }
                            }catch(error){
                                console.error(error);
                            }
                        });
                    });
                </script> }                    
            </section>    
        </main>
        <slot name="after-main" />
    </div>
</Layout>

<style is:global>
    .body-bg {
        background-color: #9921e8;
        background-image: linear-gradient(315deg, #9921e8 0%, #5f72be 74%);
    }
</style>
